{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Charu jain\\\\Desktop\\\\assignment\\\\src\\\\components\\\\c2\\\\C2.jsx\";\nimport './C2.css';\nimport { useState } from 'react';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nexport const data = {\n  labels,\n  datasets: [{\n    label: 'Dataset 1',\n    data: labels.map(() => faker.datatype.number({\n      min: -1000,\n      max: 1000\n    })),\n    borderColor: 'rgb(255, 99, 132)',\n    backgroundColor: 'rgba(255, 99, 132, 0.5)'\n  }, {\n    label: 'Dataset 2',\n    data: labels.map(() => faker.datatype.number({\n      min: -1000,\n      max: 1000\n    })),\n    borderColor: 'rgb(53, 162, 235)',\n    backgroundColor: 'rgba(53, 162, 235, 0.5)'\n  }]\n};\nfunction C2() {\n  const data = [{\n    name: \"raksha\",\n    value: 330000\n  }, {\n    name: \"versha\",\n    value: 500000\n  }, {\n    name: \"charu\",\n    value: 600000\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header2\",\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          align: \"center\",\n          children: \"Tickets Solved By Agent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Graph1\",\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: {\n            data\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = C2;\nexport default C2;\nvar _c;\n$RefreshReg$(_c, \"C2\");","map":{"version":3,"names":["useState","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","register","data","labels","datasets","label","map","faker","datatype","number","min","max","borderColor","backgroundColor","C2","name","value"],"sources":["C:/Users/Charu jain/Desktop/assignment/src/components/c2/C2.jsx"],"sourcesContent":["import './C2.css'\r\nimport {useState} from 'react';\r\nimport {  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,} from \"chart.js\";\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\nexport const data = {\r\n  labels,\r\n  datasets: [\r\n    {\r\n      label: 'Dataset 1',\r\n      data: labels.map(() => faker.datatype.number({ min: -1000, max: 1000 })),\r\n      borderColor: 'rgb(255, 99, 132)',\r\n      backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n    },\r\n    {\r\n      label: 'Dataset 2',\r\n      data: labels.map(() => faker.datatype.number({ min: -1000, max: 1000 })),\r\n      borderColor: 'rgb(53, 162, 235)',\r\n      backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n    },\r\n  ],\r\n};\r\nfunction C2() {\r\n  const data=[\r\n    {name:\"raksha\",value:330000},\r\n    {name:\"versha\",value:500000},\r\n    {name:\"charu\",value:600000}\r\n  ]\r\n  return(<>\r\n      <div className=\"container2\">\r\n        <div className=\"header2\">\r\n          <h5 align=\"center\">Tickets Solved By Agent</h5>\r\n        </div>\r\n          <div className=\"Graph1\">\r\n          <Line \r\n          data={{data}}  \r\n        ></Line>\r\n        \r\n        </div>\r\n      </div>\r\n      </>\r\n    );\r\n  }\r\n  \r\n  export default C2;\r\n  "],"mappings":";AAAA,OAAO,UAAU;AACjB,SAAQA,QAAQ,QAAO,OAAO;AAC9B,SAAUC,KAAK,IAAIC,OAAO,EACxBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,QAAQ,UAAU;AAAC;AAAA;AAE3BP,OAAO,CAACQ,QAAQ,CACdP,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,CACP;AACD,OAAO,MAAME,IAAI,GAAG;EAClBC,MAAM;EACNC,QAAQ,EAAE,CACR;IACEC,KAAK,EAAE,WAAW;IAClBH,IAAI,EAAEC,MAAM,CAACG,GAAG,CAAC,MAAMC,KAAK,CAACC,QAAQ,CAACC,MAAM,CAAC;MAAEC,GAAG,EAAE,CAAC,IAAI;MAAEC,GAAG,EAAE;IAAK,CAAC,CAAC,CAAC;IACxEC,WAAW,EAAE,mBAAmB;IAChCC,eAAe,EAAE;EACnB,CAAC,EACD;IACER,KAAK,EAAE,WAAW;IAClBH,IAAI,EAAEC,MAAM,CAACG,GAAG,CAAC,MAAMC,KAAK,CAACC,QAAQ,CAACC,MAAM,CAAC;MAAEC,GAAG,EAAE,CAAC,IAAI;MAAEC,GAAG,EAAE;IAAK,CAAC,CAAC,CAAC;IACxEC,WAAW,EAAE,mBAAmB;IAChCC,eAAe,EAAE;EACnB,CAAC;AAEL,CAAC;AACD,SAASC,EAAE,GAAG;EACZ,MAAMZ,IAAI,GAAC,CACT;IAACa,IAAI,EAAC,QAAQ;IAACC,KAAK,EAAC;EAAM,CAAC,EAC5B;IAACD,IAAI,EAAC,QAAQ;IAACC,KAAK,EAAC;EAAM,CAAC,EAC5B;IAACD,IAAI,EAAC,OAAO;IAACC,KAAK,EAAC;EAAM,CAAC,CAC5B;EACD,oBAAO;IAAA,uBACH;MAAK,SAAS,EAAC,YAAY;MAAA,wBACzB;QAAK,SAAS,EAAC,SAAS;QAAA,uBACtB;UAAI,KAAK,EAAC,QAAQ;UAAA,UAAC;QAAuB;UAAA;UAAA;UAAA;QAAA;MAAK;QAAA;QAAA;QAAA;MAAA,QAC3C,eACJ;QAAK,SAAS,EAAC,QAAQ;QAAA,uBACvB,QAAC,IAAI;UACL,IAAI,EAAE;YAACd;UAAI;QAAE;UAAA;UAAA;UAAA;QAAA;MACP;QAAA;QAAA;QAAA;MAAA,QAEF;IAAA;MAAA;MAAA;MAAA;IAAA;EACF,iBACH;AAEP;AAAC,KApBMY,EAAE;AAsBT,eAAeA,EAAE;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}